name: Push to Octopus Server

on:
  release:
    types: [created]

  workflow_dispatch:
    inputs:
      release-tag:
        description: "The tag of the release being replicated in Octopus Deploy"
        required: true

jobs:
  build:
    name: "Push Package and Create Release"
    runs-on: ubuntu-latest
    steps:

      - name: Install Octopus CLI üêô
        uses: OctopusDeploy/install-octopus-cli-action@v1.1.7

      - name: Fetch Release Notes
        id: fetch-release-notes
        run: |
          echo "::debug::${{github.event_name}}"
          OUTPUT_FILE="release_notes.txt"
          if [[ "${{github.event_name}}" = "release" ]]; then
           jq --raw-output '.release.body' ${{ github.event_path }} > $OUTPUT_FILE
          else
             RELEASE_URL=$GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases/tags/${{github.event.inputs.release-tag}}
             echo $RELEASE_URL
             echo "::debug::Fetching relesae from $RELEASE_URL"
             curl -s -H "Accept: application/vnd.github.v3+json" $RELEASE_URL | jq --raw-output '.body' | sed s#\r\n#  # > $OUTPUT_FILE
          fi
          echo "::set-output name=release-note-file::$OUTPUT_FILE"

      - name: Dump the outputfile
        run: |
           cat ${{ steps.fetch-release-notes.outputs.release-note-file }}

      - name: Create a release in Octopus Deploy üêô
        uses: OctopusDeploy/create-release-action@v1.1.1
        with:
          api_key: ${{ secrets.OCTOPUS_APIKEY }}
          server: ${{ secrets.OCTOPUS_SERVER }}
          space: "Integrations"
          project: "TeamCity Plugin"
          package_version: ${{ steps.create-package.outputs.version }}
          release_number: ${{ steps.create-package.outputs.version }}
          release_notes_file: ${{ steps.fetch-release-notes.outputs.release-note-file }}
